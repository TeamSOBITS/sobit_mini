<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from sobit_mini.urdf.xacro          | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="sobit_mini" xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller" xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface" xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor">
  <material name="wheel">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="black">
    <color rgba="0.1 0.1 0.1 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="silver">
    <color rgba="0.741 0.752 0.760 1.0"/>
  </material>
  <material name="red">
    <color rgba="1.0 0.0 0.0 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 1.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 1.0 1.0"/>
  </material>
  <material name="dark_grey">
    <color rgba="0.175 0.175 0.175 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.3 0.3 0.3 1.0"/>
  </material>
  <link name="base_footprint"/>
  <!--
       Base link is set at the bottom of the base mould.
       This is done to be compatible with the way base link
       was configured for turtlebot 1. Refer to
       https://github.com/turtlebot/turtlebot/issues/40
       To put the base link at the more oft used wheel
       axis, set the z-distance from the base_footprint
       to 0.352.
      -->
  <joint name="base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0102"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <link name="base_link">
    <visual>
      <geometry>
        <!-- new mesh -->
        <mesh filename="package://kobuki_description/meshes/main_body.dae"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0.001 0 0.05199"/>
    </visual>
    <collision name="base">
      <geometry>
        <cylinder length="0.10938" radius="0.178"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0.0 0 0.05949"/>
    </collision>
    <inertial>
      <!-- COM experimentally determined -->
      <origin xyz="0.01 0 0"/>
      <mass value="2.4"/>
      <!-- 2.4/2.6 kg for small/big battery pack -->
      <!-- Kobuki's inertia tensor is approximated by a cylinder with homogeneous mass distribution
             More details: http://en.wikipedia.org/wiki/List_of_moment_of_inertia_tensors
             m = 2.4 kg; h = 0.09 m; r = 0.175 m
             ixx = 1/12 * m * (3 * r^2 + h^2)
             iyy = 1/12 * m * (3 * r^2 + h^2)
             izz = 1/2 * m * r^2
          -->
      <inertia ixx="0.019995" ixy="0.0" ixz="0.0" iyy="0.019995" iyz="0.0" izz="0.03675"/>
    </inertial>
  </link>
  <joint name="wheel_l_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_l_link"/>
    <origin rpy="-1.5707963267948966 0 0" xyz="0.00 0.115 0.0250"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="wheel_l_link">
    <visual>
      <geometry>
        <mesh filename="package://kobuki_description/meshes/wheel.dae"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.0206" radius="0.0352"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="wheel_r_joint" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_r_link"/>
    <origin rpy="-1.5707963267948966 0 0" xyz="0.00 -0.115 0.0250"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="wheel_r_link">
    <visual>
      <geometry>
        <mesh filename="package://kobuki_description/meshes/wheel.dae"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.0206" radius="0.0350"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="caster_front_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_front_link"/>
    <origin rpy="-1.5707963267948966 0 0" xyz="0.115 0.0 0.007"/>
  </joint>
  <link name="caster_front_link">
    <collision>
      <geometry>
        <cylinder length="0.0176" radius="0.017"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="caster_back_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_back_link"/>
    <origin rpy="-1.5707963267948966 0 0" xyz="-0.135 0.0 0.009"/>
  </joint>
  <link name="caster_back_link">
    <collision>
      <geometry>
        <cylinder length="0.0176" radius="0.017"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <!-- Kobuki's sensors -->
  <joint name="gyro_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0.056 0.062 0.0202"/>
    <parent link="base_link"/>
    <child link="gyro_link"/>
  </joint>
  <link name="gyro_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="cliff_sensor_left_joint" type="fixed">
    <origin rpy="0 1.5707963267948966 0" xyz="0.08734 0.13601 0.0214"/>
    <parent link="base_link"/>
    <child link="cliff_sensor_left_link"/>
  </joint>
  <link name="cliff_sensor_left_link">
    <inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="cliff_sensor_right_joint" type="fixed">
    <origin rpy="0 1.5707963267948966 0" xyz="0.085 -0.13601 0.0214"/>
    <parent link="base_link"/>
    <child link="cliff_sensor_right_link"/>
  </joint>
  <link name="cliff_sensor_right_link">
    <inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="cliff_sensor_front_joint" type="fixed">
    <origin rpy="0 1.5707963267948966 0" xyz="0.156 0.00 0.0214"/>
    <parent link="base_link"/>
    <child link="cliff_sensor_front_link"/>
  </joint>
  <link name="cliff_sensor_front_link">
    <inertial>
      <mass value="0.0001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <stack_bottom_pole number="0" parent="base_link" x_loc="0.120" y_loc="0.082" z_loc="0.1028"/>
  <stack_bottom_pole number="1" parent="base_link" x_loc="0.055" y_loc="0.120" z_loc="0.1028"/>
  <stack_bottom_pole number="2" parent="base_link" x_loc="-0.055" y_loc="0.120" z_loc="0.1028"/>
  <stack_bottom_pole number="3" parent="base_link" x_loc="0.120" y_loc="-0.082" z_loc="0.1028"/>
  <stack_bottom_pole number="4" parent="base_link" x_loc="0.055" y_loc="-0.120" z_loc="0.1028"/>
  <stack_bottom_pole number="5" parent="base_link" x_loc="-0.055" y_loc="-0.120" z_loc="0.1028"/>
  <joint name="plate_bottom_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.02364 0.0 0.1306"/>
    <parent link="base_link"/>
    <child link="plate_bottom_link"/>
  </joint>
  <link name="plate_bottom_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://turtlebot_description/meshes/stacks/hexagons/plate_bottom.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="-0.02364 0 0"/>
      <geometry>
        <cylinder length="0.006" radius="0.170"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.520"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.003328" ixy="0.0" ixz="0.0" iyy="0.003328" iyz="0.0" izz="0.006656"/>
    </inertial>
  </link>
  <stack_3d_sensor_pole number="0" parent="base_link" x_loc="0.0381" y_loc="0.1505" z_loc="0.1735"/>
  <stack_3d_sensor_pole number="1" parent="base_link" x_loc="0.0381" y_loc="-0.1505" z_loc="0.1735"/>
  <stack_3d_sensor_pole number="2" parent="base_link" x_loc="-0.0381" y_loc="0.1505" z_loc="0.1735"/>
  <stack_3d_sensor_pole number="3" parent="base_link" x_loc="-0.0381" y_loc="-0.1505" z_loc="0.1735"/>
  <joint name="plate_middle_joint" type="fixed">
    <!-- <origin xyz="-0.01364 0.0 0.222" rpy="0 0 0" /> -->
    <origin rpy="0 0 0" xyz="-0.01364 0.0 0.2646"/>
    <parent link="base_link"/>
    <child link="plate_middle_link"/>
  </joint>
  <link name="plate_middle_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0.0 0"/>
      <geometry>
        <mesh filename="package://turtlebot_description/meshes/stacks/hexagons/plate_top.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.01364 0.0 0.0"/>
      <geometry>
        <cylinder length="0.006" radius="0.170"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.520"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.003328" ixy="0.0" ixz="0.0" iyy="0.003328" iyz="0.0" izz="0.006656"/>
    </inertial>
  </link>

<!--\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\-->
<!-- 各パーツの情報を設定 -->
	<gazebo reference="wheel_l_link">
		<mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
	</gazebo>

  <gazebo reference="wheel_r_link">
		<mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
	</gazebo>

  <gazebo reference="caster_front_link">
		<mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
	</gazebo>

  <gazebo reference="caster_back_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <gazebo reference="base_link">
    <mu1>0.3</mu1>
    <mu2>0.3</mu2>
    <sensor type="contact" name="bumpers">
      <always_on>1</always_on>
      <update_rate>50.0</update_rate>
      <visualize>true</visualize>
      <contact>
        <collision>base_footprint_fixed_joint_lump__base_collision</collision>
      </contact>
    </sensor>
  </gazebo>

  <gazebo reference="cliff_sensor_left_link">
      <sensor type="ray" name="cliff_sensor_left">
        <always_on>true</always_on>
        <update_rate>50</update_rate>
        <visualize>true</visualize>
        <ray>
          <scan>
            <horizontal>
              <samples>50</samples>
              <resolution>1.0</resolution>
              <min_angle>-0.0436</min_angle>  <!-- -2.5 degree -->
              <max_angle>0.0436</max_angle> <!-- 2.5 degree -->
            </horizontal>
<!--            Can't use vertical rays until this bug is resolved: -->
<!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
<!--               <vertical> -->
<!--                 <samples>50</samples> -->
<!--                 <resolution>1.0</resolution> -->
<!--                 <min_angle>-0.0436</min_angle>  -2.5 degree -->
<!--                 <max_angle>0.0436</max_angle> 2.5 degree -->
<!--               </vertical> -->
          </scan>
          <range>
            <min>0.01</min>
            <max>0.15</max>
            <resolution>1.0</resolution>
          </range>
        </ray>
      </sensor>
    </gazebo>

    <gazebo reference="cliff_sensor_right_link">
      <sensor type="ray" name="cliff_sensor_right">
        <always_on>true</always_on>
        <update_rate>50</update_rate>
        <visualize>true</visualize>
        <ray>
          <scan>
            <horizontal>
              <samples>50</samples>
              <resolution>1.0</resolution>
              <min_angle>-0.0436</min_angle>  <!-- -2.5 degree -->
              <max_angle>0.0436</max_angle> <!-- 2.5 degree -->
            </horizontal>
<!--            Can't use vertical rays until this bug is resolved: -->
<!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
<!--               <vertical> -->
<!--                 <samples>50</samples> -->
<!--                 <resolution>1.0</resolution> -->
<!--                 <min_angle>-0.0436</min_angle>  -2.5 degree -->
<!--                 <max_angle>0.0436</max_angle> 2.5 degree -->
<!--               </vertical> -->
          </scan>
          <range>
            <min>0.01</min>
            <max>0.15</max>
            <resolution>1.0</resolution>
          </range>
        </ray>
      </sensor>
    </gazebo>

    <gazebo reference="cliff_sensor_front_link">
      <sensor type="ray" name="cliff_sensor_front">
        <always_on>true</always_on>
        <update_rate>50</update_rate>
        <visualize>true</visualize>
        <ray>
          <scan>
            <horizontal>
              <samples>50</samples>
              <resolution>1.0</resolution>
              <min_angle>-0.0436</min_angle>  <!-- -2.5 degree -->
              <max_angle>0.0436</max_angle> <!-- 2.5 degree -->
            </horizontal>
<!--               Can't use vertical rays until this bug is resolved: -->
<!--            https://bitbucket.org/osrf/gazebo/issue/509/vertical-sensor-doesnt-works -->
<!--               <vertical> -->
<!--                 <samples>50</samples> -->
<!--                 <resolution>1.0</resolution> -->
<!--                 <min_angle>-0.0436</min_angle>  -2.5 degree -->
<!--                 <max_angle>0.0436</max_angle> 2.5 degree -->
<!--               </vertical> -->
          </scan>
          <range>
            <min>0.01</min>
            <max>0.15</max>
            <resolution>1.0</resolution>
          </range>
        </ray>
      </sensor>
    </gazebo>

    <gazebo reference="gyro_link">
      <sensor type="imu" name="imu">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>false</visualize>
      <imu>
          <noise>
            <type>gaussian</type>
            <rate>
              <mean>0.0</mean>
              <stddev>${0.0014*0.0014}</stddev> <!-- 0.25 x 0.25 (deg/s) -->
              <bias_mean>0.0</bias_mean>
              <bias_stddev>0.0</bias_stddev>
            </rate>
            <accel> <!-- not used in the plugin and real robot, hence using tutorial values -->
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </accel>
          </noise>
        </imu>
      </sensor>
    </gazebo>

  <gazebo>
    <plugin name="gazebo_ros_head_ydlidar_controller" filename="libgazebo_ros_gpu_laser.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>base_link</robotBaseFrame>
      <cmdTimeout>2.0</cmdTimeout>
    </plugin>
    </gazebo>
  

</robot>

